{"version":3,"file":"main.js","mappings":"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","sources":["webpack://ahj-homeworks_testing_2/./src/js/app.js"],"sourcesContent":["const container = document.querySelector('.container');\nconst inputText = container.querySelector('.input-text');\nconst postsList = container.querySelector('.posts-list');\nconst errorModal = container.querySelector('.error-modal');\nconst errorMessage = container.querySelector('.error-message');\nconst form = container.querySelector('.form');\nconst inputLocation = container.querySelector('.input-location');\nconst cancelButton = container.querySelector('.cancel-button');\n\nconst now = new Date();\nconst year = now.getFullYear();\nconst month = showCorrectDate(now.getMonth() + 1);\nconst day = showCorrectDate(now.getDate());\nconst hours = showCorrectDate(now.getHours());\nconst minutes = showCorrectDate(now.getMinutes());\n\nlet latitude;\nlet longitude;\n\nconst posts = [];\n\n//!Серверную часть и загрузку также реализовывать не нужно, храните всё в памяти\nfunction save(arr) {\n\tlocalStorage.editorData = JSON.stringify({\n\t\tarr,\n\t});\n}\n\nfunction restore() {\n\tconst json = localStorage.editorData;\n\n\tif (!json) {\n\t\treturn;\n\t}\n\n\tconst data = JSON.parse(json);\n\n\t//console.log(data.arr);\n\t//console.log(data.arr.length);\n\n\tfor (let i = 0; i < data.arr.length; i++) {\n\t\t//console.log(data.arr[i]);\n\n\t\tconst li = document.createElement('li');\n\t\tli.classList.add('post');\n\t\tli.innerHTML = `\n\t\t<div class=\"post-header\">\n\t\t\t<span class=\"date\">${data.arr[i].day}.${data.arr[i].month}.${data.arr[i].year}</span>\n\t\t\t<span class=\"time\">${data.arr[i].hours}:${data.arr[i].minutes}</span>\n\t\t</div>\n\t\t<p>${data.arr[i].text}</p>\n\t\t<span class=\"geolocation\">[${data.arr[i].latitude}, ${data.arr[i].longitude}]</span>\n\t\t`;\n\n\t\tpostsList.prepend(li);\n\n\t\tposts.push(data.arr[i]);\n\t}\n}\n\nwindow.onload = function() {\n\t//console.log(posts);\n\trestore();\n};\n\n//!получаем геолокацию\nnavigator.geolocation.getCurrentPosition(\n\tfunction (position) {\n\t\tlatitude = position.coords.latitude;\n\t\tlongitude = position.coords.longitude;\n\t},\n\tfunction () {\n\t\terrorModal.classList.add('showed');\n\n\t\tcancelButton.addEventListener('click', () => {\n\t\t\terrorModal.classList.remove('showed');\n\t\t});\n\n\t\tform.addEventListener('submit', (e) => {\n\t\t\te.preventDefault();\n\n\t\t\tif (inputLocation.value !== '') {\n\t\t\t\tgetUserGeolocation(inputLocation.value, inputLocation);\n\t\t\t}\n\t\t});\n\t},\n);\n\n//!добавляем новый пост\ndocument.addEventListener('keyup', (e) => {\n\n\tif (e.key === 'Enter' && inputText.value !== '') {\n\t\t//console.log(inputText.value);\n\n\t\tconst li = document.createElement('li');\n\t\tli.classList.add('post');\n\t\tli.innerHTML = `\n\t\t<div class=\"post-header\">\n\t\t\t<span class=\"date\">${day}.${month}.${year}</span>\n\t\t\t<span class=\"time\">${hours}:${minutes}</span>\n\t\t</div>\n\t\t<p>${inputText.value}</p>\n\t\t<span class=\"geolocation\">[${latitude}, ${longitude}]</span>\n\t\t`;\n\n\t\tpostsList.prepend(li);\n\n\t\t//!Серверную часть и загрузку также реализовывать не нужно, храните всё в памяти\n\t\tposts.push({\n\t\t\tday,\n\t\t\tmonth,\n\t\t\tyear,\n\t\t\thours,\n\t\t\tminutes,\n\t\t\ttext: inputText.value,\n\t\t\tlatitude,\n\t\t\tlongitude,\n\t\t});\n\t\t//console.log(posts);\n\n\t\tsave(posts);\n\n\t\tinputText.value = '';\n\t}\n});\n\nfunction showCorrectDate(number) {\n\tif (number < 10) {\n\t\treturn `0${number}`;\n\t}\n\n\treturn number;\n}\n\n//! пользовательский ввод геолокации\nexport default function getUserGeolocation(str, input) {\n\tconst regex = /^(\\[?-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?\\]?)$/;\n\n\tconst match = regex.exec(str);\n\n\tif (match) {\n\t\tif (match[1].startsWith('[')) {\n\t\t\tmatch[1] = match[1].substring(1);\n\t\t}\n\t\tlatitude = parseFloat(match[1]);\n\t\tlongitude = parseFloat(match[2]);\n\t\tconsole.log(latitude, longitude);\n\n\t\terrorModal.classList.remove('showed');\n\n\t\tconsole.log(form.checkValidity());\n\t} else {\n\t\tconsole.log('Invalid coordinates');\n\n\t\tinput.setCustomValidity('Введите корректные координаты!');\n\n\t\tinput.classList.add('invalid');\n\n\t\terrorMessage.classList.remove('hidden');\n\n\t\tconsole.log(form.checkValidity());\n\t}\n}\n"],"names":["container","document","querySelector","inputText","postsList","errorModal","errorMessage","form","inputLocation","cancelButton","now","Date","year","getFullYear","month","showCorrectDate","getMonth","day","getDate","hours","getHours","minutes","getMinutes","latitude","longitude","posts","number","window","onload","json","localStorage","editorData","data","JSON","parse","i","arr","length","li","createElement","classList","add","innerHTML","text","prepend","push","restore","navigator","geolocation","getCurrentPosition","position","coords","addEventListener","remove","e","preventDefault","value","str","input","match","exec","startsWith","substring","parseFloat","console","log","checkValidity","setCustomValidity","getUserGeolocation","key","stringify"],"sourceRoot":""}